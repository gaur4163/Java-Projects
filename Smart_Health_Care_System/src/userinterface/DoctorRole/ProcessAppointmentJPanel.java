/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DoctorRole;

import Business.Enterprise.Enterprise;
import Business.Enterprise.SmartMedicineDeliveryEnterprise;
import Business.HealthCare.Medicine;
import Business.Network.Network;
import Business.Person.Person;
import Business.SeniorPerson.SeniorPerson;
import Business.Store.MedicineProduct;
import Business.Store.Store;
import Business.USA_Smart_HealthCare;
import Business.WorkQueue.MakeAppointment;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.ArrayList;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Apoorva
 */
public class ProcessAppointmentJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProcessAppointmentJPanel
     */
   private JPanel userProcessContainer;
   private MakeAppointment request;
   private  USA_Smart_HealthCare business;
   private ArrayList<Medicine> popList;
   private BufferedImage image;
   
    public ProcessAppointmentJPanel(JPanel userProcessContainer,WorkRequest request, USA_Smart_HealthCare business) {
        initComponents();
        try{this.userProcessContainer = userProcessContainer;
        this.request= (MakeAppointment)request;
        this.business = business;
        popCombo();
        DefaultTableModel model = (DefaultTableModel)presjTable1.getModel();
        model.setRowCount(0);
        popList = new ArrayList<>();
        setImg(); }
        catch(Exception x)
        { JOptionPane.showMessageDialog(this, "There is some problem please try again later");
        }
    }
    
     public void setImg(){
    setOpaque(true);
        setBorder(BorderFactory.createLineBorder(Color.BLUE, 5));
        try
        {
            image = ImageIO.read(new File(getClass().getResource("/userinterface/elderCare.jpg").toURI()));
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    
    }
    
    
     @Override
    public Dimension getPreferredSize()
    {
        return (new Dimension(300, 300));
    }

    public void paintComponent(Graphics g)
    {
        super.paintComponent(g);
        g.drawImage(image, 0, 0, this);
    }
    
    public void popCombo(){
        medjComboBox1.removeAllItems();
    for(Network ntwk: business.getNetworkList()){
        System.out.println("n/w "+ntwk);
        for(Enterprise etr : ntwk.getEnterpriseDirectory().getEnterpriseList()){
            System.out.println("enterprxz "+etr);
        if (etr instanceof SmartMedicineDeliveryEnterprise){
        Store s = ((SmartMedicineDeliveryEnterprise)etr).getStore();
            System.out.println("store name "+s);
            for(MedicineProduct p : s.getProductList().getProductcatalog()){
                    medjComboBox1.addItem(p);
                    System.out.println("item name "+p);
        
        }
        
        }
        
        
        }
    
    }
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        resultjTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        prresjTextArea2 = new javax.swing.JTextArea();
        submitjButton1 = new javax.swing.JButton();
        medjComboBox1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        direcjTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        presjTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backJButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 610, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 204));
        jLabel1.setText("Visit Results/Reports");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 170, -1, -1));

        resultjTextArea1.setColumns(20);
        resultjTextArea1.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        resultjTextArea1.setForeground(new java.awt.Color(0, 51, 204));
        resultjTextArea1.setRows(5);
        jScrollPane2.setViewportView(resultjTextArea1);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 200, 279, 74));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 204));
        jLabel2.setText("New Prescription");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 167, -1, 20));

        prresjTextArea2.setColumns(20);
        prresjTextArea2.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        prresjTextArea2.setForeground(new java.awt.Color(0, 51, 204));
        prresjTextArea2.setRows(5);
        jScrollPane3.setViewportView(prresjTextArea2);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 200, 277, 74));

        submitjButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        submitjButton1.setForeground(new java.awt.Color(51, 0, 51));
        submitjButton1.setText("Submit");
        submitjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitjButton1ActionPerformed(evt);
            }
        });
        add(submitjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(695, 490, 80, -1));

        medjComboBox1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        medjComboBox1.setForeground(new java.awt.Color(0, 51, 204));
        medjComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(medjComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 340, 170, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 204));
        jLabel3.setText("Medicine List");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 307, -1, 20));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(51, 0, 51));
        jButton1.setText("Add>>");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 480, -1, -1));

        direcjTextField1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        direcjTextField1.setForeground(new java.awt.Color(0, 51, 204));
        direcjTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                direcjTextField1ActionPerformed(evt);
            }
        });
        add(direcjTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 420, 170, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 51, 204));
        jLabel4.setText("Directions");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 390, 80, -1));

        presjTable1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        presjTable1.setForeground(new java.awt.Color(0, 51, 204));
        presjTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine", "Directions"
            }
        ));
        presjTable1.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(presjTable1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 320, 280, 130));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(51, 0, 51));
        jButton2.setText("Remove");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 480, -1, -1));

        jLabel5.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 48)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 0, 102));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Smart Health Care System");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, 100));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 0, 153));
        jLabel6.setText("Process Appointment");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
try{
          userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        DoctorWorkAreaJPanel ddsa = (DoctorWorkAreaJPanel) component;
        ddsa.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer); }
        catch(Exception x)
        { JOptionPane.showMessageDialog(this, "There is some problem please try again later");
        }
    }//GEN-LAST:event_backJButtonActionPerformed

    private void submitjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitjButton1ActionPerformed
   try{ String result = resultjTextArea1.getText();
    String prescription = prresjTextArea2.getText();
    
    if(result.equals("")||prescription.equals(""))
    {
        JOptionPane.showMessageDialog(this, "Please fill the visit details and a prescription for patient");
    return;
    }
    else
    {
     request.setResolveDate(new Date());
        request.setStatus("Completed");
        request.setPrescription(prescription);
    request.setResult(result);
    Person doctor = request.getReceiver().getPerson();
       SeniorPerson person = request.getSender().getSeniorPerson();
    if(person.ifDocPres(doctor))
    {
    person.removePres(doctor);
    }
     
     for(int i=0; i< presjTable1.getRowCount();i++)
     {
     MedicineProduct p = (MedicineProduct)presjTable1.getValueAt(i, 0);
     String direction =(String) presjTable1.getValueAt(i, 1);
     Medicine med = person.addMedicine(p, direction,doctor);
     med.setRequest(request);
     }
      JOptionPane.showMessageDialog(this, "The prescription is sent to patient and their relatives");
    } }
        catch(Exception x)
        { JOptionPane.showMessageDialog(this, "There is some problem please try again later");
        }
    // TODO add your handling code here:
    }//GEN-LAST:event_submitjButton1ActionPerformed

    private void direcjTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_direcjTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_direcjTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try{
           
        MedicineProduct prod = (MedicineProduct)medjComboBox1.getSelectedItem();
        if(prod.equals("")){JOptionPane.showMessageDialog(this, "Please select a medicine first");
        return;}
        String direc = direcjTextField1.getText();
        Medicine newPres = new Medicine(prod, direc, null);
        popList.add(newPres);
        refreshTable(popList);
         }
        catch(Exception x)
        { JOptionPane.showMessageDialog(this, "There is some problem please try again later");
        } 
        
    }//GEN-LAST:event_jButton1ActionPerformed
public void refreshTable(ArrayList<Medicine> list){
 DefaultTableModel model = (DefaultTableModel)presjTable1.getModel();
 model.setRowCount(0);
         for(Medicine medical: list)
         {   Object[] row = new Object[2];
            row[0] = medical.getProduct();
            row[1] = medical.getDirections();
            model.addRow(row);

         }
}
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
      try{  int selectedRow = presjTable1.getSelectedRow();
        
        if (selectedRow < 0){
         
            JOptionPane.showMessageDialog(this, "Please select a row from prescription table");
           return;}
        else{
       popList.remove(selectedRow);
            refreshTable(popList);
        }
         }
        catch(Exception x)
        { JOptionPane.showMessageDialog(this, "There is some problem please try again later");
        } 
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JTextField direcjTextField1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JComboBox medjComboBox1;
    private javax.swing.JTable presjTable1;
    private javax.swing.JTextArea prresjTextArea2;
    private javax.swing.JTextArea resultjTextArea1;
    private javax.swing.JButton submitjButton1;
    // End of variables declaration//GEN-END:variables
}
