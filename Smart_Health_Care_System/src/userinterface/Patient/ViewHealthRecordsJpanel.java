/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Patient;

import Business.Enterprise.Enterprise;
import Business.HealthCare.VitalSign;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.USA_Smart_HealthCare;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.BorderFactory;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryLabelPositions;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Apoorva
 */
public class ViewHealthRecordsJpanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private UserAccount account;
    private Organization organization;
    private Enterprise enterprise;
    private USA_Smart_HealthCare business;
    private Network network;
    private BufferedImage image;
    /**
     * Creates new form PatientWorkArea
     */
    public ViewHealthRecordsJpanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, USA_Smart_HealthCare business,
            Network network) {
        initComponents();
      try{
        this.userProcessContainer= userProcessContainer;
        this.account = account;
        this.organization = organization;
        this.enterprise= enterprise;
        this.business= business;
        this.network = network;
        setImg();
           }
        catch(Exception x)
        { JOptionPane.showMessageDialog(this, "There is some problem please try again later");
        } 
       
    }

    
    
        
     public void setImg(){
    setOpaque(true);
        setBorder(BorderFactory.createLineBorder(Color.BLUE, 5));
        try
        {
            image = ImageIO.read(new File(getClass().getResource("/userinterface/elderCare.jpg").toURI()));
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    
    }
    
    
     @Override
    public Dimension getPreferredSize()
    {
        return (new Dimension(300, 300));
    }

    public void paintComponent(Graphics g)
    {
        super.paintComponent(g);
        g.drawImage(image, 0, 0, this);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Weight = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        monitorHealthjButton1 = new javax.swing.JButton();
        StepCount = new javax.swing.JButton();
        HeartRate2 = new javax.swing.JButton();
        bp1 = new javax.swing.JButton();
        RespRate1 = new javax.swing.JButton();
        Sugar1 = new javax.swing.JButton();
        sleep1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Weight.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Weight.setForeground(new java.awt.Color(51, 0, 51));
        Weight.setText("Weight");
        Weight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WeightActionPerformed(evt);
            }
        });
        add(Weight, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 470, 260, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 0, 153));
        jLabel2.setText("We are here to serve you");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 180, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 0, 153));
        jLabel6.setText("Welcome to Speed Help");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 140, -1, -1));

        backJButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 600, -1, -1));

        monitorHealthjButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        monitorHealthjButton1.setForeground(new java.awt.Color(51, 0, 51));
        monitorHealthjButton1.setText("View Chart of Lastest Health Records");
        monitorHealthjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monitorHealthjButton1ActionPerformed(evt);
            }
        });
        add(monitorHealthjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 260, 270, 30));

        StepCount.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        StepCount.setForeground(new java.awt.Color(51, 0, 51));
        StepCount.setText("Activity");
        StepCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StepCountActionPerformed(evt);
            }
        });
        add(StepCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 400, 260, 30));

        HeartRate2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        HeartRate2.setForeground(new java.awt.Color(51, 0, 51));
        HeartRate2.setText("Heart Rate");
        HeartRate2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HeartRate2ActionPerformed(evt);
            }
        });
        add(HeartRate2, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 260, 260, 30));

        bp1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bp1.setForeground(new java.awt.Color(51, 0, 51));
        bp1.setText("Blood Pressure");
        bp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bp1ActionPerformed(evt);
            }
        });
        add(bp1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 330, 260, 30));

        RespRate1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        RespRate1.setForeground(new java.awt.Color(51, 0, 51));
        RespRate1.setText("Respiration Rate");
        RespRate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RespRate1ActionPerformed(evt);
            }
        });
        add(RespRate1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 330, 270, 30));

        Sugar1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Sugar1.setForeground(new java.awt.Color(51, 0, 51));
        Sugar1.setText("Sugar Level");
        Sugar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Sugar1ActionPerformed(evt);
            }
        });
        add(Sugar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 400, 270, 30));

        sleep1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        sleep1.setForeground(new java.awt.Color(51, 0, 51));
        sleep1.setText("Sleep Hours");
        sleep1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sleep1ActionPerformed(evt);
            }
        });
        add(sleep1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 470, 270, 30));

        jLabel1.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Smart Health Care System");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, 100));
    }// </editor-fold>//GEN-END:initComponents

    private void WeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WeightActionPerformed
        try
        {
      DefaultCategoryDataset vitalSignDataset=new DefaultCategoryDataset();
       
       
       
        ArrayList<VitalSign> vitalSignList = account.getSeniorPerson().getVitalSignList().getHistory();
        /*At least 2 vital sign records needed to show chart */
        if (vitalSignList.isEmpty() || vitalSignList.size() == 1) {
            JOptionPane.showMessageDialog(this, "No vital signs or only one vital sign found. At least 2 vital sign records needed to show chart!", "Warning", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
       for(VitalSign vitalSign:vitalSignList){
           
           // vitalSignDataset.addValue(vitalSign.getRespiratoryRate(),"RR", vitalSign.getTimestamp());
          //  vitalSignDataset.addValue(vitalSign.getHeartRate(),"Heart Rate", vitalSign.getTimestamp());
            
//            vitalSignDataset.addValue(vitalSign.getBloodPressure(),"BP", vitalSign.getTimestamp());
           vitalSignDataset.addValue(vitalSign.getWeight(),"Weight", vitalSign.getTimestamp());
//            vitalSignDataset.addValue(vitalSign.getSleepinghours(),"SH", vitalSign.getTimestamp());
//            vitalSignDataset.addValue(vitalSign.getStepCount(),"ST", vitalSign.getTimestamp());
   //         vitalSignDataset.addValue(vitalSign.getSugarLevel(),"Weight", vitalSign.getTimestamp());
//           
        }
        
        JFreeChart vitalSignChart= ChartFactory.createBarChart3D("Vital Sign Chart", "Time Stamp", "Rate", vitalSignDataset, PlotOrientation.VERTICAL, true, false, false);
        vitalSignChart.setBackgroundPaint(Color.white);
        
        CategoryPlot vitalSignChartPlot = vitalSignChart.getCategoryPlot();
        vitalSignChartPlot.setBackgroundPaint(Color.white);    
        
        CategoryAxis vitalSignDomainAxis = vitalSignChartPlot.getDomainAxis();
        vitalSignDomainAxis.setCategoryLabelPositions(
            CategoryLabelPositions.createUpRotationLabelPositions(Math.PI / 6.0)
        );
        
        NumberAxis vitalSignRangeAxis = (NumberAxis) vitalSignChartPlot.getRangeAxis();
        vitalSignRangeAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
        
        
        
        GradientPaint gradientpaint1 = new GradientPaint(0.0F, 0.0F, new Color(100, 225, 10), 0.0F, 0.0F, new Color(136, 136, 255));
        GradientPaint gradientpaint2 = new GradientPaint(0.0F, 0.0F, new Color(205, 92, 92), 0.0F, 0.0F, new Color(136, 136, 255));
     
 
        BarRenderer r = (BarRenderer) vitalSignChart.getCategoryPlot().getRenderer();
    r.setSeriesPaint(0, gradientpaint1);
    r.setSeriesPaint(1, gradientpaint1);
    r.setSeriesPaint(2, gradientpaint2);
        
        ChartFrame chartFrame = new ChartFrame("Chart", vitalSignChart);
        chartFrame.setVisible(true);
        chartFrame.setSize(600, 520);
           }
        catch(Exception x)
        { JOptionPane.showMessageDialog(this, "There is some problem please try again later");
        } 
    }                                                
   

    private void createChart()
    {
        try{
        DefaultCategoryDataset vitalSignDataset=new DefaultCategoryDataset();
       
       
       
        ArrayList<VitalSign> vitalSignList = account.getSeniorPerson().getVitalSignList().getHistory();
        /*At least 2 vital sign records needed to show chart */
        if (vitalSignList.isEmpty() || vitalSignList.size() == 1) {
            JOptionPane.showMessageDialog(this, "No vital signs or only one vital sign found. At least 2 vital sign records needed to show chart!", "Warning", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        int j = vitalSignList.size()-1;int count=0;
        for (int i=j; i>0;i--){
            count++;
        VitalSign vitalSign = vitalSignList.get(i);
            vitalSignDataset.addValue(vitalSign.getRespiratoryRate(),"RR", vitalSign.getTimestamp());
            vitalSignDataset.addValue(vitalSign.getHeartRate(),"HR", vitalSign.getTimestamp());
            vitalSignDataset.addValue(vitalSign.getBloodPressure(),"BP", vitalSign.getTimestamp());
            vitalSignDataset.addValue(vitalSign.getWeight(),"WI", vitalSign.getTimestamp());
            vitalSignDataset.addValue(vitalSign.getSleepinghours(),"SH", vitalSign.getTimestamp());
            vitalSignDataset.addValue(vitalSign.getSugarLevel(),"SU", vitalSign.getTimestamp());
           if(count == 5){break;}
        }
        
        JFreeChart vitalSignChart= ChartFactory.createBarChart3D("Vital Sign Chart", "Time Stamp", "Rate", vitalSignDataset, PlotOrientation.VERTICAL, true, false, false);
        vitalSignChart.setBackgroundPaint(Color.white);
        CategoryPlot vitalSignChartPlot = vitalSignChart.getCategoryPlot();
        vitalSignChartPlot.setBackgroundPaint(Color.lightGray);    
        
        CategoryAxis vitalSignDomainAxis = vitalSignChartPlot.getDomainAxis();
        vitalSignDomainAxis.setCategoryLabelPositions(
            CategoryLabelPositions.createUpRotationLabelPositions(Math.PI / 6.0)
        );
        
        NumberAxis vitalSignRangeAxis = (NumberAxis) vitalSignChartPlot.getRangeAxis();
        vitalSignRangeAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
        
        ChartFrame chartFrame = new ChartFrame("Chart", vitalSignChart);
        chartFrame.setVisible(true);
        chartFrame.setSize(600, 520);
                
    
        
           }
        catch(Exception x)
        { JOptionPane.showMessageDialog(this, "There is some problem please try again later");
        } 
        
    }//GEN-LAST:event_WeightActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void monitorHealthjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monitorHealthjButton1ActionPerformed
    createChart();        // TODO add your handling code here:
    }//GEN-LAST:event_monitorHealthjButton1ActionPerformed

    private void StepCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StepCountActionPerformed
        try{
        DefaultCategoryDataset vitalSignDataset=new DefaultCategoryDataset();
       
       
       
        ArrayList<VitalSign> vitalSignList = account.getSeniorPerson().getVitalSignList().getHistory();
        /*At least 2 vital sign records needed to show chart */
        if (vitalSignList.isEmpty() || vitalSignList.size() == 1) {
            JOptionPane.showMessageDialog(this, "No vital signs or only one vital sign found. At least 2 vital sign records needed to show chart!", "Warning", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
       for(VitalSign vitalSign:vitalSignList){
           
           // vitalSignDataset.addValue(vitalSign.getRespiratoryRate(),"RR", vitalSign.getTimestamp());
     //       vitalSignDataset.addValue(vitalSign.getHeartRate(),"Heart Rate", vitalSign.getTimestamp());
            
//            vitalSignDataset.addValue(vitalSign.getBloodPressure(),"BP", vitalSign.getTimestamp());
//            vitalSignDataset.addValue(vitalSign.getWeight(),"WT", vitalSign.getTimestamp());
//            vitalSignDataset.addValue(vitalSign.getSleepinghours(),"SH", vitalSign.getTimestamp());
            vitalSignDataset.addValue(vitalSign.getStepCount(),"Step Counts", vitalSign.getTimestamp());
//            vitalSignDataset.addValue(vitalSign.getSugarLevel(),"WT", vitalSign.getTimestamp());
//           
        }
        
        JFreeChart vitalSignChart= ChartFactory.createBarChart3D("Vital Sign Chart", "Time Stamp", "Rate", vitalSignDataset, PlotOrientation.VERTICAL, true, false, false);
        vitalSignChart.setBackgroundPaint(Color.white);
        
        CategoryPlot vitalSignChartPlot = vitalSignChart.getCategoryPlot();
        vitalSignChartPlot.setBackgroundPaint(Color.white);    
        
        CategoryAxis vitalSignDomainAxis = vitalSignChartPlot.getDomainAxis();
        vitalSignDomainAxis.setCategoryLabelPositions(
            CategoryLabelPositions.createUpRotationLabelPositions(Math.PI / 6.0)
        );
        
        NumberAxis vitalSignRangeAxis = (NumberAxis) vitalSignChartPlot.getRangeAxis();
        vitalSignRangeAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
        
        
        
        GradientPaint gradientpaint1 = new GradientPaint(0.0F, 0.0F, new Color(100, 225, 10), 0.0F, 0.0F, new Color(136, 136, 255));
        GradientPaint gradientpaint2 = new GradientPaint(0.0F, 0.0F, new Color(205, 92, 92), 0.0F, 0.0F, new Color(136, 136, 255));
     
 
        BarRenderer r = (BarRenderer) vitalSignChart.getCategoryPlot().getRenderer();
    r.setSeriesPaint(0, gradientpaint1);
    r.setSeriesPaint(1, gradientpaint1);
    r.setSeriesPaint(2, gradientpaint2);
        
        ChartFrame chartFrame = new ChartFrame("Chart", vitalSignChart);
        chartFrame.setVisible(true);
        chartFrame.setSize(600, 520);     
           }
        catch(Exception x)
        { JOptionPane.showMessageDialog(this, "There is some problem please try again later");
        } // TODO add your handling code here:
    }//GEN-LAST:event_StepCountActionPerformed

    private void HeartRate2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HeartRate2ActionPerformed
try{DefaultCategoryDataset vitalSignDataset=new DefaultCategoryDataset();
       
       
       
        ArrayList<VitalSign> vitalSignList = account.getSeniorPerson().getVitalSignList().getHistory();
        /*At least 2 vital sign records needed to show chart */
        if (vitalSignList.isEmpty() || vitalSignList.size() == 1) {
            JOptionPane.showMessageDialog(this, "No vital signs or only one vital sign found. At least 2 vital sign records needed to show chart!", "Warning", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
       for(VitalSign vitalSign:vitalSignList){
           
           // vitalSignDataset.addValue(vitalSign.getRespiratoryRate(),"RR", vitalSign.getTimestamp());
            vitalSignDataset.addValue(vitalSign.getHeartRate(),"Heart Rate", vitalSign.getTimestamp());
            
//            vitalSignDataset.addValue(vitalSign.getBloodPressure(),"BP", vitalSign.getTimestamp());
//            vitalSignDataset.addValue(vitalSign.getWeight(),"WT", vitalSign.getTimestamp());
//            vitalSignDataset.addValue(vitalSign.getSleepinghours(),"SH", vitalSign.getTimestamp());
//            vitalSignDataset.addValue(vitalSign.getStepCount(),"ST", vitalSign.getTimestamp());
//            vitalSignDataset.addValue(vitalSign.getSugarLevel(),"WT", vitalSign.getTimestamp());
//           
        }
        
        JFreeChart vitalSignChart= ChartFactory.createBarChart3D("Vital Sign Chart", "Time Stamp", "Rate", vitalSignDataset, PlotOrientation.VERTICAL, true, false, false);
        vitalSignChart.setBackgroundPaint(Color.white);
        
        CategoryPlot vitalSignChartPlot = vitalSignChart.getCategoryPlot();
        vitalSignChartPlot.setBackgroundPaint(Color.white);    
        
        CategoryAxis vitalSignDomainAxis = vitalSignChartPlot.getDomainAxis();
        vitalSignDomainAxis.setCategoryLabelPositions(
            CategoryLabelPositions.createUpRotationLabelPositions(Math.PI / 6.0)
        );
        
        NumberAxis vitalSignRangeAxis = (NumberAxis) vitalSignChartPlot.getRangeAxis();
        vitalSignRangeAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
        
        
        
        GradientPaint gradientpaint1 = new GradientPaint(0.0F, 0.0F, new Color(100, 225, 10), 0.0F, 0.0F, new Color(136, 136, 255));
        GradientPaint gradientpaint2 = new GradientPaint(0.0F, 0.0F, new Color(205, 92, 92), 0.0F, 0.0F, new Color(136, 136, 255));
     
 
        BarRenderer r = (BarRenderer) vitalSignChart.getCategoryPlot().getRenderer();
    r.setSeriesPaint(0, gradientpaint1);
    r.setSeriesPaint(1, gradientpaint1);
    r.setSeriesPaint(2, gradientpaint2);
        
        ChartFrame chartFrame = new ChartFrame("Chart", vitalSignChart);
        chartFrame.setVisible(true);
        chartFrame.setSize(600, 520);  
           }
        catch(Exception x)
        { JOptionPane.showMessageDialog(this, "There is some problem please try again later");
        } // TODO add your handling code here:
    }//GEN-LAST:event_HeartRate2ActionPerformed

    private void bp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bp1ActionPerformed
try{
    DefaultCategoryDataset vitalSignDataset=new DefaultCategoryDataset();

       
       
       
        ArrayList<VitalSign> vitalSignList = account.getSeniorPerson().getVitalSignList().getHistory();
        /*At least 2 vital sign records needed to show chart */
        if (vitalSignList.isEmpty() || vitalSignList.size() == 1) {
            JOptionPane.showMessageDialog(this, "No vital signs or only one vital sign found. At least 2 vital sign records needed to show chart!", "Warning", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
       for(VitalSign vitalSign:vitalSignList){
           
           // vitalSignDataset.addValue(vitalSign.getRespiratoryRate(),"RR", vitalSign.getTimestamp());
          //  vitalSignDataset.addValue(vitalSign.getHeartRate(),"Heart Rate", vitalSign.getTimestamp());
            
            vitalSignDataset.addValue(vitalSign.getBloodPressure(),"Blood Pressure", vitalSign.getTimestamp());
//            vitalSignDataset.addValue(vitalSign.getWeight(),"WT", vitalSign.getTimestamp());
//            vitalSignDataset.addValue(vitalSign.getSleepinghours(),"SH", vitalSign.getTimestamp());
//            vitalSignDataset.addValue(vitalSign.getStepCount(),"ST", vitalSign.getTimestamp());
//            vitalSignDataset.addValue(vitalSign.getSugarLevel(),"WT", vitalSign.getTimestamp());
//           
        }
        
        JFreeChart vitalSignChart= ChartFactory.createBarChart3D("Vital Sign Chart", "Time Stamp", "Rate", vitalSignDataset, PlotOrientation.VERTICAL, true, false, false);
        vitalSignChart.setBackgroundPaint(Color.white);
        
        CategoryPlot vitalSignChartPlot = vitalSignChart.getCategoryPlot();
        vitalSignChartPlot.setBackgroundPaint(Color.white);    
        
        CategoryAxis vitalSignDomainAxis = vitalSignChartPlot.getDomainAxis();
        vitalSignDomainAxis.setCategoryLabelPositions(
            CategoryLabelPositions.createUpRotationLabelPositions(Math.PI / 6.0)
        );
        
        NumberAxis vitalSignRangeAxis = (NumberAxis) vitalSignChartPlot.getRangeAxis();
        vitalSignRangeAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
        
        
        
        GradientPaint gradientpaint1 = new GradientPaint(0.0F, 0.0F, new Color(100, 225, 10), 0.0F, 0.0F, new Color(136, 136, 255));
        GradientPaint gradientpaint2 = new GradientPaint(0.0F, 0.0F, new Color(205, 92, 92), 0.0F, 0.0F, new Color(136, 136, 255));
     
 
        BarRenderer r = (BarRenderer) vitalSignChart.getCategoryPlot().getRenderer();
    r.setSeriesPaint(0, gradientpaint1);
    r.setSeriesPaint(1, gradientpaint1);
    r.setSeriesPaint(2, gradientpaint2);
        
        ChartFrame chartFrame = new ChartFrame("Chart", vitalSignChart);
        chartFrame.setVisible(true);
        chartFrame.setSize(600, 520);     
           }
        catch(Exception x)
        { JOptionPane.showMessageDialog(this, "There is some problem please try again later");
        } // TODO add your handling code here:
    }//GEN-LAST:event_bp1ActionPerformed

    private void RespRate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RespRate1ActionPerformed
try{DefaultCategoryDataset vitalSignDataset=new DefaultCategoryDataset();
       
       
       
        ArrayList<VitalSign> vitalSignList = account.getSeniorPerson().getVitalSignList().getHistory();
        /*At least 2 vital sign records needed to show chart */
        if (vitalSignList.isEmpty() || vitalSignList.size() == 1) {
            JOptionPane.showMessageDialog(this, "No vital signs or only one vital sign found. At least 2 vital sign records needed to show chart!", "Warning", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
       for(VitalSign vitalSign:vitalSignList){
           
            vitalSignDataset.addValue(vitalSign.getRespiratoryRate(),"Respiration Rate", vitalSign.getTimestamp());
           // vitalSignDataset.addValue(vitalSign.getHeartRate(),"Heart Rate", vitalSign.getTimestamp());
            
//            vitalSignDataset.addValue(vitalSign.getBloodPressure(),"BP", vitalSign.getTimestamp());
//            vitalSignDataset.addValue(vitalSign.getWeight(),"WT", vitalSign.getTimestamp());
//            vitalSignDataset.addValue(vitalSign.getSleepinghours(),"SH", vitalSign.getTimestamp());
//            vitalSignDataset.addValue(vitalSign.getStepCount(),"ST", vitalSign.getTimestamp());
//            vitalSignDataset.addValue(vitalSign.getSugarLevel(),"WT", vitalSign.getTimestamp());
//           
        }
        
        JFreeChart vitalSignChart= ChartFactory.createBarChart3D("Vital Sign Chart", "Time Stamp", "Rate", vitalSignDataset, PlotOrientation.VERTICAL, true, false, false);
        vitalSignChart.setBackgroundPaint(Color.white);
        
        CategoryPlot vitalSignChartPlot = vitalSignChart.getCategoryPlot();
        vitalSignChartPlot.setBackgroundPaint(Color.white);    
        
        CategoryAxis vitalSignDomainAxis = vitalSignChartPlot.getDomainAxis();
        vitalSignDomainAxis.setCategoryLabelPositions(
            CategoryLabelPositions.createUpRotationLabelPositions(Math.PI / 6.0)
        );
        
        NumberAxis vitalSignRangeAxis = (NumberAxis) vitalSignChartPlot.getRangeAxis();
        vitalSignRangeAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
        
        
        
        GradientPaint gradientpaint1 = new GradientPaint(0.0F, 0.0F, new Color(100, 225, 10), 0.0F, 0.0F, new Color(136, 136, 255));
        GradientPaint gradientpaint2 = new GradientPaint(0.0F, 0.0F, new Color(205, 92, 92), 0.0F, 0.0F, new Color(136, 136, 255));
     
 
        BarRenderer r = (BarRenderer) vitalSignChart.getCategoryPlot().getRenderer();
    r.setSeriesPaint(0, gradientpaint1);
    r.setSeriesPaint(1, gradientpaint1);
    r.setSeriesPaint(2, gradientpaint2);
        
        ChartFrame chartFrame = new ChartFrame("Chart", vitalSignChart);
        chartFrame.setVisible(true);
        chartFrame.setSize(600, 520); 
           }
        catch(Exception x)
        { JOptionPane.showMessageDialog(this, "There is some problem please try again later");
        } // TODO add your handling code here:
    }//GEN-LAST:event_RespRate1ActionPerformed

    private void Sugar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Sugar1ActionPerformed
try{ DefaultCategoryDataset vitalSignDataset=new DefaultCategoryDataset();
       
       
       
        ArrayList<VitalSign> vitalSignList = account.getSeniorPerson().getVitalSignList().getHistory();
        /*At least 2 vital sign records needed to show chart */
        if (vitalSignList.isEmpty() || vitalSignList.size() == 1) {
            JOptionPane.showMessageDialog(this, "No vital signs or only one vital sign found. At least 2 vital sign records needed to show chart!", "Warning", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
       for(VitalSign vitalSign:vitalSignList){
           
           // vitalSignDataset.addValue(vitalSign.getRespiratoryRate(),"RR", vitalSign.getTimestamp());
           // vitalSignDataset.addValue(vitalSign.getHeartRate(),"Heart Rate", vitalSign.getTimestamp());
            
//            vitalSignDataset.addValue(vitalSign.getBloodPressure(),"BP", vitalSign.getTimestamp());
//            vitalSignDataset.addValue(vitalSign.getWeight(),"WT", vitalSign.getTimestamp());
//            vitalSignDataset.addValue(vitalSign.getSleepinghours(),"SH", vitalSign.getTimestamp());
//            vitalSignDataset.addValue(vitalSign.getStepCount(),"ST", vitalSign.getTimestamp());
            vitalSignDataset.addValue(vitalSign.getSugarLevel(),"Sugar Level", vitalSign.getTimestamp());
//           
        }
        
        JFreeChart vitalSignChart= ChartFactory.createBarChart3D("Vital Sign Chart", "Time Stamp", "Rate", vitalSignDataset, PlotOrientation.VERTICAL, true, false, false);
        vitalSignChart.setBackgroundPaint(Color.white);
        
        CategoryPlot vitalSignChartPlot = vitalSignChart.getCategoryPlot();
        vitalSignChartPlot.setBackgroundPaint(Color.white);    
        
        CategoryAxis vitalSignDomainAxis = vitalSignChartPlot.getDomainAxis();
        vitalSignDomainAxis.setCategoryLabelPositions(
            CategoryLabelPositions.createUpRotationLabelPositions(Math.PI / 6.0)
        );
        
        NumberAxis vitalSignRangeAxis = (NumberAxis) vitalSignChartPlot.getRangeAxis();
        vitalSignRangeAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
        
        
        
        GradientPaint gradientpaint1 = new GradientPaint(0.0F, 0.0F, new Color(100, 225, 10), 0.0F, 0.0F, new Color(136, 136, 255));
        GradientPaint gradientpaint2 = new GradientPaint(0.0F, 0.0F, new Color(205, 92, 92), 0.0F, 0.0F, new Color(136, 136, 255));
     
 
        BarRenderer r = (BarRenderer) vitalSignChart.getCategoryPlot().getRenderer();
    r.setSeriesPaint(0, gradientpaint1);
    r.setSeriesPaint(1, gradientpaint1);
    r.setSeriesPaint(2, gradientpaint2);
        
        ChartFrame chartFrame = new ChartFrame("Chart", vitalSignChart);
        chartFrame.setVisible(true);
        chartFrame.setSize(600, 520);     
           }
        catch(Exception x)
        { JOptionPane.showMessageDialog(this, "There is some problem please try again later");
        } // TODO add your handling code here:
    }//GEN-LAST:event_Sugar1ActionPerformed

    private void sleep1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sleep1ActionPerformed
try{DefaultCategoryDataset vitalSignDataset=new DefaultCategoryDataset();
       
       
       
        ArrayList<VitalSign> vitalSignList = account.getSeniorPerson().getVitalSignList().getHistory();
        /*At least 2 vital sign records needed to show chart */
        if (vitalSignList.isEmpty() || vitalSignList.size() == 1) {
            JOptionPane.showMessageDialog(this, "No vital signs or only one vital sign found. At least 2 vital sign records needed to show chart!", "Warning", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
       for(VitalSign vitalSign:vitalSignList){
           
           // vitalSignDataset.addValue(vitalSign.getRespiratoryRate(),"RR", vitalSign.getTimestamp());
            //vitalSignDataset.addValue(vitalSign.getHeartRate(),"Heart Rate", vitalSign.getTimestamp());
            
//            vitalSignDataset.addValue(vitalSign.getBloodPressure(),"BP", vitalSign.getTimestamp());
//            vitalSignDataset.addValue(vitalSign.getWeight(),"WT", vitalSign.getTimestamp());
          vitalSignDataset.addValue(vitalSign.getSleepinghours(),"SH", vitalSign.getTimestamp());
//            vitalSignDataset.addValue(vitalSign.getStepCount(),"ST", vitalSign.getTimestamp());
//            vitalSignDataset.addValue(vitalSign.getSugarLevel(),"WT", vitalSign.getTimestamp());
//           
        }
        
        JFreeChart vitalSignChart= ChartFactory.createBarChart3D("Vital Sign Chart", "Time Stamp", "Rate", vitalSignDataset, PlotOrientation.VERTICAL, true, false, false);
        vitalSignChart.setBackgroundPaint(Color.white);
        
        CategoryPlot vitalSignChartPlot = vitalSignChart.getCategoryPlot();
        vitalSignChartPlot.setBackgroundPaint(Color.white);    
        
        CategoryAxis vitalSignDomainAxis = vitalSignChartPlot.getDomainAxis();
        vitalSignDomainAxis.setCategoryLabelPositions(
            CategoryLabelPositions.createUpRotationLabelPositions(Math.PI / 6.0)
        );
        
        NumberAxis vitalSignRangeAxis = (NumberAxis) vitalSignChartPlot.getRangeAxis();
        vitalSignRangeAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
        
        
        
        GradientPaint gradientpaint1 = new GradientPaint(0.0F, 0.0F, new Color(100, 225, 10), 0.0F, 0.0F, new Color(136, 136, 255));
        GradientPaint gradientpaint2 = new GradientPaint(0.0F, 0.0F, new Color(205, 92, 92), 0.0F, 0.0F, new Color(136, 136, 255));
     
 
        BarRenderer r = (BarRenderer) vitalSignChart.getCategoryPlot().getRenderer();
    r.setSeriesPaint(0, gradientpaint1);
    r.setSeriesPaint(1, gradientpaint1);
    r.setSeriesPaint(2, gradientpaint2);
        
        ChartFrame chartFrame = new ChartFrame("Chart", vitalSignChart);
        chartFrame.setVisible(true);
        chartFrame.setSize(600, 520);  
           }
        catch(Exception x)
        { JOptionPane.showMessageDialog(this, "There is some problem please try again later");
        } // TODO add your handling code here:
    }//GEN-LAST:event_sleep1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton HeartRate2;
    private javax.swing.JButton RespRate1;
    private javax.swing.JButton StepCount;
    private javax.swing.JButton Sugar1;
    private javax.swing.JButton Weight;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton bp1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JButton monitorHealthjButton1;
    private javax.swing.JButton sleep1;
    // End of variables declaration//GEN-END:variables
}