/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Patient;

import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.Person.Age;
import Business.USA_Smart_HealthCare;
import Business.UserAccount.UserAccount;
import Business.Utils.MyStringVerifier;
import Business.WorkQueue.MakeAppointment;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.File;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Apoorva
 */
public class ManageAppointmentJPanel extends javax.swing.JPanel {

    
  
        private JPanel userProcessContainer;
    private UserAccount account;
    private Organization organization;
    private Enterprise enterprise;
    private USA_Smart_HealthCare business;
    private Network network;
    private BufferedImage image;
   
    /**
     * Creates new form askAssistanceJPanel
     */
    public ManageAppointmentJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, USA_Smart_HealthCare business,
            Network network) {
        initComponents();
       try{ this.userProcessContainer= userProcessContainer;
        this.account = account;
        this.organization = organization;
        this.enterprise= enterprise;
        this.business= business;
        this.network = network;
        populateComboBox();
        setImg();
         populateMonth();
        populateDate();
        
        populateYear();   }
        catch(Exception x)
        { JOptionPane.showMessageDialog(this, "There is some problem please try again later");
        } 
    }
    
     public void setImg(){
    setOpaque(true);
        setBorder(BorderFactory.createLineBorder(Color.BLUE, 5));
        try
        {
            image = ImageIO.read(new File(getClass().getResource("/userinterface/elderCare.jpg").toURI()));
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    
    }
    
    
     @Override
    public Dimension getPreferredSize()
    {
        return (new Dimension(300, 300));
    }

    public void paintComponent(Graphics g)
    {
        super.paintComponent(g);
        g.drawImage(image, 0, 0, this);
    }
     public void populateComboBox(){
        reasonjComboBox1.removeAllItems();
        reasonjComboBox1.addItem("Regular Weekly Checkup");
        reasonjComboBox1.addItem("Regular Monthly Test");
        reasonjComboBox1.addItem("Regular Therapy/Vaccination");
        reasonjComboBox1.addItem("Consultation");                
                
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        assisHelpJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        msgjTextField = new javax.swing.JTextField();
        reasonjComboBox1 = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        dateCombo = new javax.swing.JComboBox();
        monthCombo = new javax.swing.JComboBox();
        yearCombo = new javax.swing.JComboBox();

        setForeground(new java.awt.Color(51, 0, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 0, 153));
        jLabel1.setText("Welcome to Speed Help");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 130, -1, -1));

        assisHelpJButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        assisHelpJButton.setForeground(new java.awt.Color(51, 0, 51));
        assisHelpJButton.setText("Schedule");
        assisHelpJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assisHelpJButtonActionPerformed(evt);
            }
        });
        add(assisHelpJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 500, 180, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 0, 153));
        jLabel2.setText("We are here to serve you");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 170, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 0, 153));
        jLabel5.setText("Schedule a Doctor's Home visit ");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 260, -1, -1));

        backJButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 600, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 51, 204));
        jLabel6.setText("Date of Visit");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 320, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 51, 204));
        jLabel7.setText("Reason for visit");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 390, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 51, 204));
        jLabel8.setText("Message");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 450, -1, -1));

        msgjTextField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        msgjTextField.setForeground(new java.awt.Color(0, 51, 204));
        msgjTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msgjTextFieldActionPerformed(evt);
            }
        });
        add(msgjTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 441, 179, 30));

        reasonjComboBox1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        reasonjComboBox1.setForeground(new java.awt.Color(0, 51, 204));
        reasonjComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(reasonjComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 380, 179, 30));

        jLabel9.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 48)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 0, 102));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Smart Health Care System");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, 100));

        dateCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(dateCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 320, 40, -1));

        monthCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(monthCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 320, 50, -1));

        yearCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(yearCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 320, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void assisHelpJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assisHelpJButtonActionPerformed
      try{    String selectedRow = (String) reasonjComboBox1.getSelectedItem();
        
                if (selectedRow.equals("")||msgjTextField.getText().equals("") ){
                        
                        JOptionPane.showMessageDialog(this, "Please select a reason, fill a date and enter a message to schedule appointment");
                   return; 
                }
                else{
        MyStringVerifier myStringVerifier= new MyStringVerifier();
        msgjTextField.setInputVerifier(myStringVerifier); 
        int date = (int) Integer.parseInt((String) dateCombo.getSelectedItem());
            String month = (String) monthCombo.getSelectedItem();
            int year  = (int) yearCombo.getSelectedItem();
        Age dateA = new Age(date,month,year);
        
         
        MakeAppointment request = new MakeAppointment();
        request.setMessage(msgjTextField.getText());
        request.setReason(selectedRow);
        request.setAppointmentDate(dateA);
        request.setSender(account);
        request.setStatus("Sent");
        Organization org = null;
        //  System.out.println(" network "+network);
        for (Enterprise enterp: network.getEnterpriseDirectory().getEnterpriseList() ){
            for (Organization organization : enterp.getOrganizationDirectory().getOrganizationList()){

                //   System.out.println(" organization "+organization);
                if (organization instanceof DoctorOrganization){
                    org = organization;
                    // System.out.println("checking isntance");
                    break;
                }
            }}
            if (org!=null){
                org.getWorkQueue().getWorkRequestList().add(request);
                account.getWorkQueue().getWorkRequestList().add(request);
                  JOptionPane.showMessageDialog(this, "Your appointment on date "+date+" is scheduled");
            }}
                   }
        catch(Exception x)
        { JOptionPane.showMessageDialog(this, "There is some problem please try again later");
        } 
    }//GEN-LAST:event_assisHelpJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        PatientWorkArea pwe = (PatientWorkArea) component;
//        pwe.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void msgjTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msgjTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_msgjTextFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assisHelpJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JComboBox dateCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox monthCombo;
    private javax.swing.JTextField msgjTextField;
    private javax.swing.JComboBox reasonjComboBox1;
    private javax.swing.JComboBox yearCombo;
    // End of variables declaration//GEN-END:variables
private void populateMonth() {
      monthCombo.removeAllItems();
            monthCombo.addItem("Jan");
            monthCombo.addItem("Feb");
            monthCombo.addItem("Mar");
            monthCombo.addItem("Apr");
            monthCombo.addItem("May");
            monthCombo.addItem("Jun");
            monthCombo.addItem("Jul");
            monthCombo.addItem("Aug");
            monthCombo.addItem("Sep");
            monthCombo.addItem("Oct");
            monthCombo.addItem("Nov");
            monthCombo.addItem("Dec");
           
            
        //To change body of generated methods, choose Tools | Templates.
    }
 private void populateDate() {
        dateCombo.removeAllItems();
         String mon = (String) monthCombo.getSelectedItem();
         System.out.println("-"+mon+"-");
         if (mon.equals("Jan") || mon.equals("Mar") || mon.equals("May") || mon.equals("Jul") || mon.equals("Aug") || mon.equals("Oct") || mon.equals("Dec")){
             dateCombo.addItem("1");
             dateCombo.addItem("2");
             dateCombo.addItem("3");
             dateCombo.addItem("4");
             dateCombo.addItem("5");
             dateCombo.addItem("6");
             dateCombo.addItem("7");
             dateCombo.addItem("8");
             dateCombo.addItem("9");
             dateCombo.addItem("10");
             dateCombo.addItem("11");
             dateCombo.addItem("12");
             dateCombo.addItem("13");
             dateCombo.addItem("14");
             dateCombo.addItem("15");
             dateCombo.addItem("16");
             dateCombo.addItem("17");
             dateCombo.addItem("18");
             dateCombo.addItem("19");
             dateCombo.addItem("20");
             dateCombo.addItem("21");
             dateCombo.addItem("22");
             dateCombo.addItem("23");
             dateCombo.addItem("24");
             dateCombo.addItem("25");
             dateCombo.addItem("26");
             dateCombo.addItem("27");
             dateCombo.addItem("28");
             dateCombo.addItem("29");
             dateCombo.addItem("30");
             dateCombo.addItem("31");
         }
             else if (mon.equals("Apr") || mon.equals("Jun") || mon.equals("Sep") || mon.equals("Nov")){
             dateCombo.addItem("1");
             dateCombo.addItem("2");
             dateCombo.addItem("3");
             dateCombo.addItem("4");
             dateCombo.addItem("5");
             dateCombo.addItem("6");
             dateCombo.addItem("7");
             dateCombo.addItem("8");
             dateCombo.addItem("9");
             dateCombo.addItem("10");
             dateCombo.addItem("11");
             dateCombo.addItem("12");
             dateCombo.addItem("13");
             dateCombo.addItem("14");
             dateCombo.addItem("15");
             dateCombo.addItem("16");
             dateCombo.addItem("17");
             dateCombo.addItem("18");
             dateCombo.addItem("19");
             dateCombo.addItem("20");
             dateCombo.addItem("21");
             dateCombo.addItem("22");
             dateCombo.addItem("23");
             dateCombo.addItem("24");
             dateCombo.addItem("25");
             dateCombo.addItem("26");
             dateCombo.addItem("27");
             dateCombo.addItem("28");
             dateCombo.addItem("29");
             dateCombo.addItem("30");
            
             }
             else {
             dateCombo.addItem("1");
             dateCombo.addItem("2");
             dateCombo.addItem("3");
             dateCombo.addItem("4");
             dateCombo.addItem("5");
             dateCombo.addItem("6");
             dateCombo.addItem("7");
             dateCombo.addItem("8");
             dateCombo.addItem("9");
             dateCombo.addItem("10");
             dateCombo.addItem("11");
             dateCombo.addItem("12");
             dateCombo.addItem("13");
             dateCombo.addItem("14");
             dateCombo.addItem("15");
             dateCombo.addItem("16");
             dateCombo.addItem("17");
             dateCombo.addItem("18");
             dateCombo.addItem("19");
             dateCombo.addItem("20");
             dateCombo.addItem("21");
             dateCombo.addItem("22");
             dateCombo.addItem("23");
             dateCombo.addItem("24");
             dateCombo.addItem("25");
             dateCombo.addItem("26");
             dateCombo.addItem("27");
             dateCombo.addItem("28");
             dateCombo.addItem("29");
             }
       
         //To change body of generated methods, choose Tools | Templates.
    }

    private void populateYear() {
        yearCombo.removeAllItems();
       
        String mon = (String) monthCombo.getSelectedItem();
         System.out.println("-"+mon+"-");
         if (mon.equals("Jan") || mon.equals("Mar") ||mon.equals("Feb")||mon.equals("Jun")|| mon.equals("May") || mon.equals("Jul") || mon.equals("Aug") ||mon.equals("Sep")||mon.equals("Nov")|| mon.equals("Oct") || mon.equals("Apr"))
             {
             yearCombo.addItem(2016);}
             else{ yearCombo.addItem(2015);
         yearCombo.addItem(2016);}
//To change body of generated methods, choose Tools | Templates.
    }

}
