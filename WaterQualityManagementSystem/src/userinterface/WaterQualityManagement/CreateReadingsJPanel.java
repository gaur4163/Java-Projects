/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.WaterQualityManagement;


import Business.Enterprise.Enterprise;
import Business.Enterprise.HouseholdCommunityEnterprise;
import Business.Measurements.WaterQualityMeasurement;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.ResidentOrganization;
import Business.Organization.SurveyorOrganization;
import Business.Person.ResidentDirectory;
import Business.Person.Residents;
import Business.UserAccount.UserAccount;
import Business.Validations.MyFloatVerifier;
import Business.WorkQueue.SurveyorVisitWorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.InputVerifier;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gaurav
 */
public class CreateReadingsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateReadingsJPanel
     */
    private BufferedImage image;   
    private JPanel userProcessContainer;
    private Network ntwk;

    public CreateReadingsJPanel(JPanel upc, Network ntwk) {
        initComponents();
        this.userProcessContainer = upc;
      
        this.ntwk=ntwk;
        addVerifiers();
        popCombo();
        addVerifiers();
    }
    
    public void setImg(){
    setOpaque(true);
        setBorder(BorderFactory.createLineBorder(Color.BLUE, 5));
        try
        {
            image = ImageIO.read(new File(getClass().getResource("/userinterface/water-background.jpg").toURI()));
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    
    }
    
    
     @Override
    public Dimension getPreferredSize()
    {
        return (new Dimension(300, 300));
    }

    public void paintComponent(Graphics g)
    {
        super.paintComponent(g);
        g.drawImage(image, 0, 0, this);
    }
    

    private void addVerifiers() {
        InputVerifier floatVerifier = new MyFloatVerifier();
        pHvalueField.setInputVerifier(floatVerifier);
        salinityField.setInputVerifier(floatVerifier);
        ionNitratesField.setInputVerifier(floatVerifier);
        ionLeadField.setInputVerifier(floatVerifier);
        ionBromideField.setInputVerifier(floatVerifier);
        ionFluorideField.setInputVerifier(floatVerifier);
        statusField.setInputVerifier(floatVerifier);
        dissolvedOxygenField.setInputVerifier(floatVerifier);
    }

   public void popCombo(){
       jComboBox1.removeAllItems();
   
    for(Enterprise etr: ntwk.getEnterpriseDirectory().getEnterpriseList()){
               if(etr instanceof HouseholdCommunityEnterprise)
               {
               for(Organization org: etr.getOrganizationDirectory().getOrganizationList()){
                   if( org instanceof ResidentOrganization){
                   for(Residents d:((ResidentOrganization)org).getResidentDirectory().getResidentList() ){
                   jComboBox1.addItem(d);
                   
                         }
                      }
                   }
               }
            }
       }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        pHvalueField = new javax.swing.JTextField();
        salinityField = new javax.swing.JTextField();
        ionNitratesField = new javax.swing.JTextField();
        ionLeadField = new javax.swing.JTextField();
        saveJButton = new javax.swing.JButton();
        backJButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        ionBromideField = new javax.swing.JTextField();
        ionFluorideField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        dissolvedOxygenField = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        ionMercuryField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        statusField = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(500, 700));
        setPreferredSize(new java.awt.Dimension(500, 700));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 102));
        jLabel1.setText("pHvalue (0-14)");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 150, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 0, 102));
        jLabel2.setText("salinity (in mg/litre)");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 190, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 0, 102));
        jLabel3.setText("ionNitrates (in mg/litre)");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 230, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 0, 102));
        jLabel4.setText("ionLead (in mg/litre)");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 270, -1, -1));

        pHvalueField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        pHvalueField.setForeground(new java.awt.Color(51, 51, 255));
        add(pHvalueField, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 140, 150, 30));

        salinityField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        salinityField.setForeground(new java.awt.Color(51, 51, 255));
        add(salinityField, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 180, 150, 30));

        ionNitratesField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ionNitratesField.setForeground(new java.awt.Color(51, 51, 255));
        add(ionNitratesField, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 220, 150, 30));

        ionLeadField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ionLeadField.setForeground(new java.awt.Color(51, 51, 255));
        add(ionLeadField, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 260, 150, 30));

        saveJButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        saveJButton.setForeground(new java.awt.Color(0, 0, 153));
        saveJButton.setText("Save");
        saveJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveJButtonActionPerformed(evt);
            }
        });
        add(saveJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 540, 100, 30));

        backJButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        backJButton1.setForeground(new java.awt.Color(0, 0, 153));
        backJButton1.setText("<<Back");
        backJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButton1ActionPerformed(evt);
            }
        });
        add(backJButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 590, 100, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 0, 102));
        jLabel5.setText("Enter Reading Details");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 100, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 0, 102));
        jLabel6.setText("ionBromide (in mg/litre)");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 300, -1, 20));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 0, 102));
        jLabel7.setText("ionFluoride (in mg/litre)");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 340, -1, -1));

        ionBromideField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ionBromideField.setForeground(new java.awt.Color(51, 51, 255));
        add(ionBromideField, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 300, 150, 30));

        ionFluorideField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ionFluorideField.setForeground(new java.awt.Color(51, 51, 255));
        add(ionFluorideField, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 340, 150, 30));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 0, 102));
        jLabel8.setText("dissolvedOxygen (in mg/litre)");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 380, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 0, 102));
        jLabel9.setText("Status");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 500, 60, 20));

        dissolvedOxygenField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dissolvedOxygenField.setForeground(new java.awt.Color(51, 51, 255));
        add(dissolvedOxygenField, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 380, 150, 30));

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(51, 51, 255));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 460, 150, 30));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 0, 102));
        jLabel10.setText("ionMercury (in mg/litre)");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 420, -1, -1));

        ionMercuryField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ionMercuryField.setForeground(new java.awt.Color(51, 51, 255));
        add(ionMercuryField, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 420, 150, 30));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 0, 102));
        jLabel11.setText("Resident Account");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 460, -1, 20));

        statusField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        statusField.setForeground(new java.awt.Color(204, 0, 0));
        add(statusField, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 500, 150, 30));

        jLabel12.setFont(new java.awt.Font("Franklin Gothic Heavy", 1, 36)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 0, 204));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("WATER QUALITY  MANAGEMENT SYSTEM ");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, 90));
    }// </editor-fold>//GEN-END:initComponents

    private void saveJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveJButtonActionPerformed
        // TODO add your handling code here:
        try {
            float pHValue = Float.parseFloat(pHvalueField.getText());
            float salinity = Float.parseFloat(salinityField.getText());
            float ionNitrates = Float.parseFloat(ionNitratesField.getText());
            float ionLead = Float.parseFloat(ionLeadField.getText());
            float ionBromide = Float.parseFloat(ionBromideField.getText());
            float ionFluoride = Float.parseFloat(ionFluorideField.getText());
            float ionMercury = Float.parseFloat(ionMercuryField.getText());
            float dissolvedOxygen = Float.parseFloat(dissolvedOxygenField.getText());
           
            Residents residentAcc = (Residents)jComboBox1.getSelectedItem();
           
                
            
            WaterQualityMeasurement measurement = residentAcc.getFamily().getMeasurementList().createAndAddMeasurements();
            
            measurement.setDissolvedOxygen(dissolvedOxygen);
            measurement.setpHvalue(pHValue);
            measurement.setSalinity(salinity);
            measurement.setIonBromide(ionBromide);
            measurement.setIonFluoride(ionFluoride);
            measurement.setIonLead(ionLead);
            measurement.setIonMercury(ionMercury);
            measurement.setIonNitrates(ionNitrates);
            /*Set current date and time as TimeStamp*/
            measurement.setTimestampOfMeasure(new Date());
            String statusq = WaterQualityStatus(measurement);
            measurement.setStatus(statusq);
            statusField.setText(statusq);
            JOptionPane.showMessageDialog(this, "Water Quality Readings added!!", "Update", JOptionPane.INFORMATION_MESSAGE);
            clearFields();
            
         if (statusq == "Abnormal"){
                    
        SurveyorVisitWorkRequest request = new SurveyorVisitWorkRequest();
        request.setMessage("Abnormality Found in Resident House");
        request.setSender(searchUserAccountDirectory(residentAcc));
                   
        request.setStatus("To be Processed");
        
        
        Organization org = null;
      //  System.out.println(" network "+network);
        for (Enterprise enterp: ntwk.getEnterpriseDirectory().getEnterpriseList() ){
            for (Organization organization : enterp.getOrganizationDirectory().getOrganizationList()){

             //   System.out.println(" organization "+organization);
                if (organization instanceof SurveyorOrganization){
                    org = organization;
                   // System.out.println("checking isntance");
                    break;
                }
            }}
            if (org!=null){
                org.getWorkQueue().getWorkRequestList().add(request);
               // account.getWorkQueue().getWorkRequestList().add(request);
            }
//                CreateReadingsJPanel createReadingsJPanel = new CreateReadingsJPanel(userProcessContainer,ntwk);
//        userProcessContainer.add("CreateReadingsJPanel", createReadingsJPanel);
//
//        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//        layout.next(userProcessContainer);
           }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Please enter correct values", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_saveJButtonActionPerformed
    
    public UserAccount searchUserAccountDirectory(Residents residentAcc){
        UserAccount userAcc = null;
        for(Enterprise etr: ntwk.getEnterpriseDirectory().getEnterpriseList()){
               if(etr instanceof HouseholdCommunityEnterprise)
               {
               for(Organization org: etr.getOrganizationDirectory().getOrganizationList()){
                   if( org instanceof ResidentOrganization){
                      userAcc= residentAcc.searchAccount(residentAcc, ((ResidentOrganization)org).getUserAccountDirectory());
                       
                      }
                   }
               }
            }
        return userAcc;
    }
    
     
    private String WaterQualityStatus(WaterQualityMeasurement waterQ) {
        String waterQualityStatus = "Normal";

            float pHValue = waterQ.getpHvalue();
            float salinity = waterQ.getSalinity();
            float ionNitrates = waterQ.getIonNitrates();
            float ionLead = waterQ.getIonLead();
            float ionBromide = waterQ.getIonBromide();
            float ionFluoride = waterQ.getIonFluoride();
            float ionMercury = waterQ.getIonMercury();
            float dissolvedOxygen = waterQ.getDissolvedOxygen();
        /*Toddler*/
      
            if ((pHValue <= 6.5 || pHValue >= 8.5) /*Respiration Rate*/
                    || (salinity > 10) /*Heart Rate*/
                    || (ionNitrates >= 50) 
                    || (ionLead >= .01)
                    || ( ionBromide >= .01)
                    || ( ionFluoride >= 1.5)
                    || (ionMercury >= .001)
                    || (dissolvedOxygen < 4 || dissolvedOxygen > 11)) /*mg/l*/ {
                waterQualityStatus = "Abnormal";
            }
        
            return waterQualityStatus;
    }
    
    private void clearFields() {
        pHvalueField.setText("");
        salinityField.setText("");
        ionNitratesField.setText("");
        ionLeadField.setText("");
        ionBromideField.setText("");
        ionFluorideField.setText("");
        statusField.setText("");
        dissolvedOxygenField.setText("");
        ionMercuryField.setText("");
    }
    private void backJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButton1ActionPerformed
        // TODO add your handling code here:
          userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton1;
    private javax.swing.JTextField dissolvedOxygenField;
    private javax.swing.JTextField ionBromideField;
    private javax.swing.JTextField ionFluorideField;
    private javax.swing.JTextField ionLeadField;
    private javax.swing.JTextField ionMercuryField;
    private javax.swing.JTextField ionNitratesField;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField pHvalueField;
    private javax.swing.JTextField salinityField;
    private javax.swing.JButton saveJButton;
    private javax.swing.JLabel statusField;
    // End of variables declaration//GEN-END:variables
}
