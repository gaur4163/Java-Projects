/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.ResidentRole;

import Business.Person.ResidentDirectory;
import Business.Person.Residents;
import Business.Validations.MyStringVerifier;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.InputVerifier;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gaurav 
 */
public class ManageFamilyMembersJPanel extends javax.swing.JPanel {
    private Residents resident;
    private JPanel userProcessContainer;
    private BufferedImage image;
    /**
     * Creates new form ManageFamilyMembersJPanel
     */
    public ManageFamilyMembersJPanel(JPanel userProcessContainer, Residents resident) {
        initComponents();
         this.userProcessContainer = userProcessContainer;
        this.resident= resident;
        InputVerifier stringVerifier = new MyStringVerifier();
        populateResidentMembers();
        populateDate();
        populateMonth();
        populateYear();
        setImg();
    }
      
      public void setImg(){
    setOpaque(true);
        setBorder(BorderFactory.createLineBorder(Color.BLUE, 5));
        try
        {
            image = ImageIO.read(new File(getClass().getResource("/userinterface/water-background.jpg").toURI()));
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    
    }
    
    
     @Override
    public Dimension getPreferredSize()
    {
        return (new Dimension(300, 300));
    }

    public void paintComponent(Graphics g)
    {
        super.paintComponent(g);
        g.drawImage(image, 0, 0, this);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nameOfMember = new javax.swing.JTextField();
        healthIssue = new javax.swing.JTextField();
        addMember = new javax.swing.JButton();
        backJButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        memberTable = new javax.swing.JTable();
        monthCombo = new javax.swing.JComboBox();
        dateCombo = new javax.swing.JComboBox();
        yearCombo = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 102));
        jLabel1.setText("Name");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 370, 50, 20));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 0, 102));
        jLabel2.setText("Date Of Birth");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 420, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 0, 102));
        jLabel3.setText("Any Health Issue");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 470, -1, -1));

        nameOfMember.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        nameOfMember.setForeground(new java.awt.Color(51, 51, 255));
        add(nameOfMember, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 360, 150, 30));

        healthIssue.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        healthIssue.setForeground(new java.awt.Color(51, 51, 255));
        healthIssue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                healthIssueActionPerformed(evt);
            }
        });
        add(healthIssue, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 460, 150, 30));

        addMember.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        addMember.setForeground(new java.awt.Color(0, 0, 153));
        addMember.setText("Add Member");
        addMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMemberActionPerformed(evt);
            }
        });
        add(addMember, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 510, 130, 30));

        backJButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        backJButton1.setForeground(new java.awt.Color(0, 0, 153));
        backJButton1.setText("<<Back");
        backJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButton1ActionPerformed(evt);
            }
        });
        add(backJButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 573, 100, 30));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 0, 102));
        jLabel5.setText("Manage Family Members");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 140, -1, -1));

        memberTable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        memberTable.setForeground(new java.awt.Color(51, 51, 255));
        memberTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Member Name", "Age", "Health Issue"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        memberTable.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(memberTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 190, 480, 130));

        monthCombo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        monthCombo.setForeground(new java.awt.Color(51, 51, 255));
        monthCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        monthCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthComboActionPerformed(evt);
            }
        });
        add(monthCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 410, -1, -1));

        dateCombo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dateCombo.setForeground(new java.awt.Color(51, 51, 255));
        dateCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        dateCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateComboActionPerformed(evt);
            }
        });
        add(dateCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 410, -1, -1));

        yearCombo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        yearCombo.setForeground(new java.awt.Color(51, 51, 255));
        yearCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(yearCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 410, -1, -1));

        jLabel4.setFont(new java.awt.Font("Franklin Gothic Heavy", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 0, 204));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("WATER QUALITY  MANAGEMENT SYSTEM ");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 950, 90));
    }// </editor-fold>//GEN-END:initComponents
      public void populateResidentMembers() {
        
         
        DefaultTableModel model = (DefaultTableModel) memberTable.getModel();
        model.setRowCount(0);
   
      
            ResidentDirectory residentList = resident.getFamily().getFamilyMembers();

            
            for (Residents resident : residentList.getResidentList()) {
                Object[] row = new Object[3];
                int residentAge = resident.getAge();
               // Calendar cal = Calendar.getInstance();
                //cal.setTime(dOBAge);
               
              //  Date dateBirth = dOBAge;//dateFormat.parse(String.valueOf(dOBAge));
              
              
                row[0] = resident;
                row[1]= residentAge;
                row[2]= resident.getSufferedDisease();
               
                model.addRow(row);
            } 
             
        
    }
       private void clearFields()
        {
            nameOfMember.setText("");
            
            healthIssue.setText("");
            
        }
    private Boolean checkBlankInput()
    {
           if(nameOfMember.getText().length()==0
       
                   ||healthIssue.getText().length()==0)
          
            {
                return false;
            }
        else{
            return true;
        }
    }
    private void addMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMemberActionPerformed
        // TODO add your handling code here:
        try{ 
        if (checkBlankInput()){
        
          
            String memberName = nameOfMember.getText();
            int day = Integer.parseInt((String)dateCombo.getSelectedItem());
        String month = (String)monthCombo.getSelectedItem();
        int year =(int)yearCombo.getSelectedItem();
        
            
            String issue = healthIssue.getText();
            ResidentDirectory residentses = resident.getFamily().getFamilyMembers();
           // ResidentDirectory dir = resident.getFamily().getFamilyMembers();
            Residents newResident = new Residents();
            newResident.setName(memberName);
            newResident.setYear(year);
            newResident.setSufferedDisease(issue);
            residentses.getResidentList().add(newResident);
            
            /*Set current date and time as TimeStamp*/
            populateResidentMembers();
            JOptionPane.showMessageDialog(this, "Family Member Added Named as!!"+newResident, "Update", JOptionPane.INFORMATION_MESSAGE);
             clearFields();
         }else 
         {
            JOptionPane.showMessageDialog(this, "Please enter all values", "Error", JOptionPane.ERROR_MESSAGE);
         } 
        }catch (Exception e){
                 JOptionPane.showMessageDialog(this, "No Data Found","ERROR",JOptionPane.ERROR_MESSAGE);
                 return; 
        }
    }//GEN-LAST:event_addMemberActionPerformed

    private void backJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButton1ActionPerformed
        // TODO add your handling code here:
        
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButton1ActionPerformed

    private void healthIssueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_healthIssueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_healthIssueActionPerformed

    private void monthComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_monthComboActionPerformed
    
     private void populateMonth() {
      monthCombo.removeAllItems();
            monthCombo.addItem("Jan");
            monthCombo.addItem("Feb");
            monthCombo.addItem("Mar");
            monthCombo.addItem("Apr");
            monthCombo.addItem("May");
            monthCombo.addItem("Jun");
            monthCombo.addItem("Jul");
            monthCombo.addItem("Aug");
            monthCombo.addItem("Sep");
            monthCombo.addItem("Oct");
            monthCombo.addItem("Nov");
            monthCombo.addItem("Dec");
           
            
        //To change body of generated methods, choose Tools | Templates.
    }

    private void populateDate() {
        dateCombo.removeAllItems();
         String mon = (String) monthCombo.getSelectedItem();
         if (mon.equals("Jan") || mon.equals("Mar") || mon.equals("May") || mon.equals("Jul") || mon.equals("Aug") || mon.equals("Oct") || mon.equals("Dec")){
             dateCombo.addItem("1");
             dateCombo.addItem("2");
             dateCombo.addItem("3");
             dateCombo.addItem("4");
             dateCombo.addItem("5");
             dateCombo.addItem("6");
             dateCombo.addItem("7");
             dateCombo.addItem("8");
             dateCombo.addItem("9");
             dateCombo.addItem("10");
             dateCombo.addItem("11");
             dateCombo.addItem("12");
             dateCombo.addItem("13");
             dateCombo.addItem("14");
             dateCombo.addItem("15");
             dateCombo.addItem("16");
             dateCombo.addItem("17");
             dateCombo.addItem("18");
             dateCombo.addItem("19");
             dateCombo.addItem("20");
             dateCombo.addItem("21");
             dateCombo.addItem("22");
             dateCombo.addItem("23");
             dateCombo.addItem("24");
             dateCombo.addItem("25");
             dateCombo.addItem("26");
             dateCombo.addItem("27");
             dateCombo.addItem("28");
             dateCombo.addItem("29");
             dateCombo.addItem("30");
             dateCombo.addItem("31");
            
         }
             else if (mon.equals("Apr") || mon.equals("Jun") || mon.equals("Sep") || mon.equals("Nov")){
             dateCombo.addItem("1");
             dateCombo.addItem("2");
             dateCombo.addItem("3");
             dateCombo.addItem("4");
             dateCombo.addItem("5");
             dateCombo.addItem("6");
             dateCombo.addItem("7");
             dateCombo.addItem("8");
             dateCombo.addItem("9");
             dateCombo.addItem("10");
             dateCombo.addItem("11");
             dateCombo.addItem("12");
             dateCombo.addItem("13");
             dateCombo.addItem("14");
             dateCombo.addItem("15");
             dateCombo.addItem("16");
             dateCombo.addItem("17");
             dateCombo.addItem("18");
             dateCombo.addItem("19");
             dateCombo.addItem("20");
             dateCombo.addItem("21");
             dateCombo.addItem("22");
             dateCombo.addItem("23");
             dateCombo.addItem("24");
             dateCombo.addItem("25");
             dateCombo.addItem("26");
             dateCombo.addItem("27");
             dateCombo.addItem("28");
             dateCombo.addItem("29");
             dateCombo.addItem("30");
       
             }
             else {
             dateCombo.addItem("1");
             dateCombo.addItem("2");
             dateCombo.addItem("3");
             dateCombo.addItem("4");
             dateCombo.addItem("5");
             dateCombo.addItem("6");
             dateCombo.addItem("7");
             dateCombo.addItem("8");
             dateCombo.addItem("9");
             dateCombo.addItem("10");
             dateCombo.addItem("11");
             dateCombo.addItem("12");
             dateCombo.addItem("13");
             dateCombo.addItem("14");
             dateCombo.addItem("15");
             dateCombo.addItem("16");
             dateCombo.addItem("17");
             dateCombo.addItem("18");
             dateCombo.addItem("19");
             dateCombo.addItem("20");
             dateCombo.addItem("21");
             dateCombo.addItem("22");
             dateCombo.addItem("23");
             dateCombo.addItem("24");
             dateCombo.addItem("25");
             dateCombo.addItem("26");
             dateCombo.addItem("27");
             dateCombo.addItem("28");
             dateCombo.addItem("29");
         
             }
       
         //To change body of generated methods, choose Tools | Templates.
    }

    private void populateYear() {
        yearCombo.removeAllItems();
         String year;
         int max=2015;
         for (int count=1900;count<max;count++  ){
             yearCombo.addItem(count);
         }
//To change body of generated methods, choose Tools | Templates.
    }
    private void dateComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateComboActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addMember;
    private javax.swing.JButton backJButton1;
    private javax.swing.JComboBox dateCombo;
    private javax.swing.JTextField healthIssue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable memberTable;
    private javax.swing.JComboBox monthCombo;
    private javax.swing.JTextField nameOfMember;
    private javax.swing.JComboBox yearCombo;
    // End of variables declaration//GEN-END:variables
}
